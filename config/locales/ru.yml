# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

ru:
  infopolis_product_short_description: "комплексная автоматизация учета"
  infopolis_product_long_description: "Полный контроль всех информационных процессов
        предприятия в одной системе:
        от звонка клиента до формирования отчетности"
  infopolis_navigation_erp_details: "ПОДРОБНЕЕ"
  help_online: "Справка"
  call: "Позвонить"
  mail: "Написать"

  infopolis_erp_short_description:  |
    Программный комплекс Инфополис объединяет в себе автоматизацию всех ключевых процессов на предприятии: учет
    материальных и финансовых ресурсов, кадровый учет и управление трудовыми ресурсами, учет и планирование ресурсов
    технологического оборудования. Система позволяет получить общую картину состояния всех ресурсов предприятия и
    обеспечить сбалансированное управление ими.

  infopolis_crm_short_description:  |
    Элементом системы является модуль CRM, который служит для управления отношениями с клиентами. CRM не является
    отдельной программой, а работает с теми же справочниками, что и все остальные модули системы, что исключает
    необходимость процессов импорта/экспорта данных между ними. Задачи работы с клиентом инициируют создание
    хозяйственных операций, которые в свою очередь могут быть источником взаимодействий с клиентами.

  infopolis_bpm_short_description:  |
    Автоматизация бизнес-процессов состоит в организации взаимодействия персонала предприятия в рамках
    формализованной схемы, утверженной руководством. Это позволяет минимизировать влияние человеческого фактора и
    усилить контроль над выполнением задач. Задачи персонала связаны с хозяйственными операциями, что позволяет
    автоматизировать обработку операций с ТМЦ, отслеживание состояния запасов, управление работой персонала -
    менеджеров, работников склада и производства.
  infopolis_erp_long_description:  |
    Infopolis ERP - программа для комплексной автоматизации учета и планирования на предприятиях различного рода деятельности. Infopolis позволяет вести учет:
    материальных ресурсов - товаров, материалов, сырья, полуфабрикатов, готовых изделий, МБП, основных средств;
    <ul>
    <li>финансов - денежных средств на расчетных счетах;</li>
    <li>кадров - персонала организации в рамках должностей штатного расписания;</li>
    <li>трудовых ресурсов - рабочего врмени персонала;</li>
    <li>производственных ресурсов - мощностей производственного оборудования;</li>
    <li>документов - электронных документов и отсканированных копий;</li>
    </ul>
    Кроме первичного учета ресурсов, Infopolis ERP позволяет вести бухгалтерский учет хозяйственных операций предприятия, причем, как регламентированный - по утвержденным государством методикам с формированием обязательной отчетности, так и управленческий - по внутренним стандартам предприятия и отчетностью по МСФО или корпоративным требованиям.</br>


    Система Infopolis ERP расчитана на использование в корпоративных структурах - предприятиях со сложной структурой подразделений, взаимодействующих как с внешними контрагентами, так и между собой. В одной базе данных по каждому из подразделений может вестись обособленный первичный и бухгалтерский учет.</br>


    Мультивалютность - одно из главных преимуществ системы: хозяйственные операции могут проводиться в произвольных валютах, а учет валютных курсов позволяет правильно вести взаимозачеты с внешними контрагентами и вычислять курсовые разницы в рамках бухгалтерского учета.</br>


    Infopolis ERP - управленческая система. Главная ее задача - обеспечить эффективное управление предприятием, предоставив его руководству удобные механизмы учета и планирования ресурсов и исключив возможности злоупотреблений со стороны персонала организации. Задачи бухгалтерского учета являются вторичными, а бухгалтерия является надстройкой над общей системой учета. Это позволяет вести регламентированный бухгалтерский учет в другой системе, куда могут быть экспортированы данные, подлежащие бухгалтерскому учету.</br>


    Система разрабатывалась как универсальное средство автоматизации без привязки к специфике какой-либо сферы применения. Это позволило обеспечить широкие возможности кастомизации системы для каждого предприятия с его уникальной структурой.</br>


    Главное, что обеспечивает системе объективность и непротиворечивость данных: все блоки ERP - первичный и бухгалтерский учет, механизмы организации работы персонала, лежащие в основе подсистем CRM и BPM - не являются обособленными программами, а есть частью одной программы, работают на основе одних и тех же справочников и тесно взаимосвязаны между собой.</br>


  infopolis_CRM_BPM_long_description:  |
    Модули CRM и BPM используют встроенный в систему механизм задач, адресованных конкретным пользователям и несущим информацию о том, что пользователь должен сделать и в какие сроки. Задачи могут создаваться пользователями вручную, генерироваться системой автоматически в определенных ситуациях, возникать вследствии выполнения других задач или при проведении хозяйственных операций.</br>

    Последовательности взаимосвязанных задач и являются средством автоматизации бизнес-процессов как внутри организации, так и относительно внешних контрагентов.</br>
    Администратор системы может описывать бизнес-процессы в виде формализованных нотаций, отражающих требования руководства предприятия к выполнению сотрудниками своих функциональных обязанностей. Задачи распределяются по типам и могут иметь определенное количество возможных состояний (результатов). Настройка бизнес-процесса сводится к описанию причинно-следственных связей типа: "если задача такого-то типа приобрела такой-то статус, следует сделать то-то". Следствием в данном случае может быть как создание следующей задачи (набора задач), так и какие-либо иные действия: создание (изменение) хозяйственных операций, вызов неких процедур и пр.</br>
    Проще всего показать работу связки CRM+BPM на таком примере.</br>
    Предприятие провело рекламную акцию в виде почтовой рассылки. При этом под каждым контрагентом, которому выслано рекламное сообщение была создана соответствующая задача типа "Рассылка рекламных предложений".</br>
    На сообщение откликнулся клиент и менеджер принял от него звонок. По итогу разговора с клиентом менеджер указал в результате задачи "Рассылка рекламных предложений" результат "Звонок", что в свою очередь в соответствии с настройками бизнес-процесса привело к автоматическому созданию задачи типа "Звонок клиента". Результатом звонка стала просьба клиента сформировать для него коммерческое предложение по интересующей его группе товаров, что и указал менеджер в результате задачи "Звонок клиента". Система автоматически создает хозяйственную операцию "Коммерческое предложение" и ассоциированную с ним задачу типа "Выдать коммерческое предложение". Причем, адресована эта задача может быть другому должностному лицу - менеджеру соответствующего направления, начальнику отдела продаж и пр. - в соответсвии с настройками бизнес-процесса.</br>
    Заполнив коммерческое предложение номенклатурой, менеджер отсылает его в виде документа потенциальному клиенту и указывает на операции статус "Отправлено клиенту". Система автоматически генерирует следующую по цепочке задачу: "Контроль результата предложения", которая через два дня напомнит менеджеру о необходимости перезвонить клиенту и узнать, устроило ли его данное предложение.</br>
    Например, клиент принял предложение и просит сформировать счет на оплату указанной в предложении номенклатуры. Менеджер в задаче "Контроль результата предложения" указывает результат "Выставить счет". Система автоматически создает соответствующую хозяйственную операцию "Заказ", документ "Счет-фактура" и заполняет его номенклатурой из коммерческого предложения. Отправив клиенту Счет-фактуру, менеджер указывает в резульате задачи "Выполнено", на чем эта часть бизнес-процесса заканчивается.</br>
    По приходу оплаты по счету и разнесении банковской выписки операция "Заказ" приобретает статус "Оплачено". Это событие перехватывается механизмом BPM, который создает операцию типа "Отгрузка" и связанную с нею задачу кладовщику "Подготовить выдачу товара", а менеджеру "Уведомить клиента", что тот должен предоставить Доверенность и может забрать товар.</br>
    Очевидно, что процесс может быть и иным, более или менее сложным. Например, на каком-то этапе система может автоматически проанализировать товарные остатки и при их дефиците создать сообщение отделу снабжения или уточнить наличие товара у кладовщика с требованием произвести выборучную инвентаризуцию склада по ряду позиций. Также может быть автоматизирована отсылка сообщений клиенту по e-mail или другими средствами.</br>
    С помощью механизма BPM удобно автоматизировать процессы совершенно разных типов: задачи снабжения служб предприятия, планирование производственных операций, ведение переговоров, подготовку и заключение договоров, проведение работ по договорам и пр.</br>
    Поскольку все процессы расписаны в виде задач, которые имеют некий формальный результат, с помощью механизма отчетов можно легко праналировать эффективность работы персонала, результативность рекламных акций и пр.</br>
    Данный пример показывает, как неразрывно связан хозяйственный (материальный) учет, работа с внешними контрагентами и бизнес-процессы внутри предприятия. Эффективно автоматизировать все эти процессы можно только с помощью ERP-системы, в которой блоки CRM и BPM интегрированы в общую схему учета. Использование отдельных программных решений для хозяйственного учета и автоматизации задач персонала приводит к необходимости их искусственной интеграции, которая либо вообще невозможна, либо неэффективна в следствии сложности процессов передачи данных между программами.</br>

